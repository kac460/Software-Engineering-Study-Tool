
1)  Reducing the development cost is one of the advantages of using a customized software product. 

 ------
2)  A Use Case diagram is usually used to show the structure of the system. 

 ------
3)  The following statement is a non-functional requirement for security control: "The system shall only allow registered customers to browse their order history." 

 ------
4)  If you don't validate the requirements with the customers, it may cost up to 100 times more just to fix the error after the delivery. 

 ------
5)  Software design and implementation focus only on the problem domain. 

 ------
6)  Throwaway prototypes are usually developed at the system design phase. 

 ------
7)  Non-functional requirements are the services the software system should provide. 

 ------
8)  The A in the SMART is the abbreviation for Attainable, an attribute for evaluating requirement statements. 

 ------
9)  Domain requirements are the constraints on the software system from the solution domain. 

 ------
10)  In Scrum, the Scrum Master is the one interfaces with the customers. 

 ------
11)  Real-time embedded software usually requires more extensive validation and testing than web-based systems. 

 ------
12)  The M in the SMART is the abbreviation for Measurable, an attribute for evaluating requirement statements. 

 ------
13)  The fixed-length iterations in Scrum is called a phase. 

 ------
14)  Software efficiency includes responsiveness, processing time and memory utilization. 

 ------
15)  The first step in the requirement engineering process is conducting the requirement analysis. 

 ------
16)  There are no universal software engineering methods or techniques suitable for all software systems. 

 ------
17)  In Scrum, the sprint backlog items are estimated with story points. 

 ------
18)  The T in the SMART is the abbreviation for Transformable, an attribute for evaluating requirement statements. 

 ------
19)  The A in the SMART is the abbreviation for Accountable, an attribute for evaluating requirement statements. 

 ------
20)  Requirement reviews is usually done manually with the customers and contractors. 

 ------
21)  The T in the SMART is the abbreviation for Traceable, an attribute for evaluating requirement statements. 

 ------
22)  Agile development methods aim to reduce the delivery time for working software systems. 

 ------
23)  The best approach to develop a real-time embedded software system is go Agile. 

 ------
24)  Software specification focuses only on the user's view of the system. 

 ------
25)  Software Engineering is a discipline in which the focus is on the realization of computer solvable problems. 

 ------
26)  Functional requirements are usually the statements of the quality attributes that the software must meet. 

 ------
27)  The following requirement statement is SMART. "The report will be available soon after month-end close." 

 ------
28)  Use cases are a scenario-based technique for requirement elicitation. 

 ------
29)  A throw-away prototype is an early working version of the deliverable. 

 ------
30)  Incremental development is most appropriate for small and medium-sized software project. 

 ------
31)  Although there are multiple solutions to a software project, the solutions might not be practical since we always have certain degree of constraints in developing software, such as budget and time. 

 ------
32)  To shorten the delivery times for large and complex system, compromising system quality is acceptable. 

 ------
33)  Air traffic control systems are good examples of customized software products. 

 ------
34)  It is possible that CASE tools have extensive automation and take over creative design from the engineers. 

 ------
35)  There is no single 'ideal' approach to software engineering, therefore, we don't need a diversity of approaches to software development. 

 ------
36)  In incremental/iterative software development, an early increment of the system normally delivers low-priority functionality. 

 ------
37)  In a fast-paced business environment, the problem of using the waterfall model to develop the software is that the system design or implementation has to be reworked once the requirements change. 

 ------
38)  The notion of "Software Engineering" was first proposed in 1968 at a conference held to discuss the "software crisis". 

 ------
39)  System requirements should describe the system services in detail. 

 ------
40)  The following non-functional requirement is measurable: "The system shall process 2 transactions per second." 

 ------
41)  SMART is a specific set of attributes that every requirement statement can be measured against. 

 ------
42)  Requirement validation is concerned with demonstrating that the requirements define the system that the customers really want. 

 ------
43)  UML is a diagram to show the architectural design of the software. 

 ------
44)  One of the three advantages of explicitly designing and documenting a software architecture is it can be used as a focus for discussion by a range of different stakeholders. 

 ------
45)  Client/Server architecture can potentially save hardware cost. 

 ------
46)  "has", "is composed of" in part of speech identifies the generalization model component in a class diagram. 

 ------
47)  The manageability of a distributed system architecture is better than a centralized system architecture. 

 ------
48)  If performance is a critical requirement, the architecture should be designed to have fine-grain components, and the subsystems should constantly communicate with each other. 

 ------
49)  The last step of UI design process is interface evaluation. 

 ------
50)  Fault-tolerant system architecture should be used if maintainability is a critical requirement. 

 ------
51)  ATM (Auto Teller Machine) is a client/server architecture. 

 ------
52)  The repository architecture is a system model where the system is organized as a set of services. 

 ------
53)  Cohesion measures dependency among subsystems. 

 ------
54)  Use case diagram is normally used at both the analysis and design phase. 

 ------
55)  Localizing safety-related features improves performance. 

 ------
56)  The notation for generalization in a class diagram is a large empty arrow pointing from the superclass to the subclass. 

 ------
57)  Object communication is through message passing. 

 ------
58)  The layered pattern supports the incremental development of systems. 

 ------
59)  "has", "is composed of" in part of speech identifies the aggregation model component in a class diagram. 

 ------
60)  MVC pattern supports presentation of the same data in different ways. 

 ------
61)  The product of the architectural design process is an architectural model that describes how the system is organized as a set of communicating components. 

 ------
62)  "is a", "is kind of" in part of speech identifies the aggregation model component in a class diagram. 

 ------
63)  Architectural design is the critical link between design and requirements engineering. 

 ------
64)  Client/server architecture supports resource sharing. 

 ------
65)  There is no overlap between the processes of requirement engineering and architectural design. 

 ------
66)  Introducing redundant data improves availability but makes security more difficult. 

 ------
67)  In OO design, control objects coordinate boundary objects and entity objects. 

 ------
68)  Sequence diagram represents the interactions among a set of objects during a single use case. 

 ------
69)  In both bottom-up and top-down integration testing, you usually have to develop additional code. 

 ------
70)  Corrective maintenance is due to the fact that not all user requirements can be anticipated during design and implementation. 

 ------
71)  Regression testing is used to check that the changes made to a program have not introduced new faults. 

 ------
72)  In black-box testing, only the requirement specification is required. 

 ------
73)  "Keeping the software current with the operating systems" is a corrective maintenance task. 

 ------
74)  Software engineers should be aware of local laws governing  the use of intellectual property. 

 ------
75)  In top-down integration testing, you don't need drivers. 

 ------
76)  Ethical behavior is more than simply upholding the law. 

 ------
77)  One of the advantages of software inspection over software testing is: incomplete versions of the system can be inspected without additional costs. 

 ------
78)  Software maintenance refers to the modification of a software product after delivery. 

 ------
79)  Software engineers shall be fair to and supportive of their colleagues. 

 ------
80)  A maintenance task done on a software system to address problems of deteriorating structure is known as preventive change. 

 ------
81)  Design errors are classified as corrective change. 

 ------
82)  Software engineers shall maintain integrity and independence in their professional judgment. 

 ------
83)  The quality attribute Maintainability is the ease with which maintenance can be carried out. 

 ------
84)  A major problem of integration testing is localizing errors. 

 ------
85)  The Y2K problems should be classified as an enhancement of the software. 

 ------
86)  Software inspections or peer reviews analyze and check system representations such as requirements document, design diagrams and the source code. 

 ------
87)  In integration testing, a driver is the additional code written to simulate the component being called by the component being tested. 

 ------
88)  Software engineers shall act consistently with the public interest. 

 ------
89)  Unless a system is continually modified to satisfy emerging needs of users, the system becomes increasingly less useful. 

 ------
90)  Black-box testing is simply concerned with demonstrating that the system does or does not work properly. 

 ------
91)  During software testing, errors can hide other errors. 

 ------
92)  Acceptance testing is conducted by the developers. 

 ------
93)  White-box testing is functional testing. 

 ------
94)  Black-box testing focuses on the path coverage. 

 ------
95)  Real-time systems with complex non-functional constraints, more than half system development budget may be spent on V & V. 

 ------
96)  Traceability of test cases are connections between test cases and system requirements. 

 ------
97)  Software maintenance refers to the process of continuous change of the software throughout the software life cycle. 

 ------
98)  An advantage of incremental development is that a testable version of the system is available at a fairly early stage. 

 ------
99)  Static source code analyzers can detect uninitialized variables, but they cannot detect incorrect initializations. 

 ------
100)  Code of ethics, if carefully written and properly promoted, can be powerful instruments in the drive for professionalism and in establishing safeguards for society. 

 ------
101)  Software engineers shall ensure that their products and related modifications meet the highest professional standards possible. 

 ------
102)  "Structural changes to improve the maintainability" is classified as an adaptive maintenance task. 

 ------
103)  In bottom-up integration testing, you don't need drivers. 

 ------
104)  Requirement analysis document is required in order to perform system testing. 

 ------
105)  Software testing is a static technique of V & V by inspecting the source code. 

 ------
106)  The maintenance tasks performed due to hardware or software innovations is classified as adaptive change. 

 ------
107)  You should always use an incremental approach to system integration and testing. 

 ------
108)  White-box testing focuses on I/O behaviors. 

 ------
109)  Software engineers should not misrepresent their level of competence. They should not knowingly accept work which is beyond their competence. 

 ------
110)  Software testing involves running an implementation of the software with test data. 

 ------
111)  One of the disadvantages of having the developers maintaining the software is the new system development often gets a higher priority than maintenance. 

 ------
112)  Rerunning an existing set of tests is called regression testing. 

 ------
113)  Software engineers shall act in a manner that is in the best interests of their client and employer, consistent with the public interest. 

 ------
114)  White-box testing requires test oracle. 

 ------
115)  Unless additional work is done to explicitly reduce the complexity of a system, the system will become increasingly ore complex due to maintenance-related changes. 

 ------
116)  We need to rerun all tests after each defect repair. 

 ------
117)  One of the advantages of having a separate maintainers is there will be better documentations. 

 ------
118)  In bottom-up integration testing, you don't need stubs. 

 ------
119)  Ideally, regression testing should re-run all test cases, but it's impractical because of the cost. 

 ------
120)  You can only use a dynamic approach to test a system when a prototype or an executable version of the program is available. 

 ------
121)  Debugging is a process to establish the existence of defects in a software system. 

 ------
122)  White-box testing is structural testing. 

 ------
123)  Software engineers shall participate in lifelong learning regarding the practice of their profession and shall promote an ethical approach to the practice of the profession. 

 ------
124)  Verification and Validation starts with requirement reviews and continues through design reviews and code inspections to product testing. 

 ------